{"version":3,"sources":["containers/Main/promo.png","serviceWorker.js","components/Header/index.js","components/FormatDate/index.js","containers/Main/index.js","containers/Schedule/index.js","index.js"],"names":["module","exports","__webpack_require__","p","Boolean","window","location","hostname","match","Header","link","react_default","a","createElement","Link","to","this","props","className","addClass","concat","Component","monthToString","date","correct","Intl","DateTimeFormat","month","format","slice","toUpperCase","inclineMonth","inclineCount","data","word","number","toString","fetchData","api","state","context","fetch","then","res","json","setState","Object","defineProperty","catch","err","console","log","Main","react","Header_Header","Main_Promo","Main_Calendar","Promo","src","promo","alt","Calendar","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","Date","handleClick","bind","assertThisInitialized","e","target","closest","getFullYear","getMonth","onClick","Main_Months","Main_Month","Months","Month","dayNumber","maxDays","year","firstDay","getDay","lastDate","getDate","maxRows","weeks","i","push","Main_Weeks","key","last","weekday","cellSpacing","Weeks","days","prevDays","futureDays","Main_Day","value","Math","min","Day","_this2","height","handleResize","width","document","querySelector","clientWidth","addEventListener","removeEventListener","style","Schedule","prev","pathname","replace","split","day","prevDay","prevMonth","prevYear","toLowerCase","Schedule_Day","items","max","length","count","renderItems","prevProps","_this3","forEach","item","Schedule_Item","img","show","image","medium","title","name","airdate","season","episode","_this4","sorry","Schedule_Btn","hide","Item","Btn","tabIndex","App","BrowserRouter","Route","path","exact","component","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.512faa8a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/promo.a7886965.png\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\n/* ------------------------------------------------------------------- */\n/*                              Styles\n/* ------------------------------------------------------------------- */\n\nimport './index.sass';\n\n/* ------------------------------------------------------------------- */\n/*                              Example data\n/* ------------------------------------------------------------------- */\n\n\n\n/* ------------------------------------------------------------------- */\n/*                              Main component\n/* ------------------------------------------------------------------- */\n\nexport default class Header extends Component {\n  render() {\n    const link = <Link to={this.props.link || `/`}></Link>\n\n    return (\n      <header className={this.props.addClass ? `Header ${this.props.addClass}` : `Header`}>\n        <h1>Super film</h1>\n        {this.props.link ? link : ''}\n      </header>\n    )\n  };\n};\n","// Function for displaying month as a word\nexport function monthToString(date) {\n  const formatter = new Intl.DateTimeFormat('ru', {\n    month: 'long'\n  });\n\n  const correct = formatter.format(date);\n\n  return correct.slice(0, 1).toUpperCase() + correct.slice(1)\n};\n\n// Function for displaying day as a string of 2 letters\nexport function dayToString(date) {\n  const formatter = new Intl.DateTimeFormat('ru', {\n    weekday: 'short',\n    day: 'numeric'\n  });\n\n  const correct = formatter.format(date);\n\n  return correct.slice(0, 1).toUpperCase() + correct.slice(1)\n};\n\n// Function to correctly display the weekday number of sunday\nexport function correctDay(date) {\n  if (date.getDay() === 0) return 7;\n\n  return date.getDay()\n};\n\n// Function for inclining months\nexport function inclineMonth(date) {\n  if (date.slice(-1) === 'ь') return date.slice(0,-1) + 'я';\n\n  return date + 'а'\n};\n\n// Function for inclining words with numbers\nexport function inclineCount(data, word) {\n  // Convert into string to enable using slice()\n  const number = data.toString();\n\n  if (data > 10 && data <= 20) return data + ' ' + word + 'ов';\n\n  if (number.slice(-1) > 1 && number.slice(-1) < 5) return data + ' ' + word + 'а';\n\n  if (number.slice(-1) === 1) return data + ' ' + word;\n\n  return data + ' ' + word + 'ов';\n};\n\nexport function fetchData(api, state, context) {\n  fetch(api)\n    .then(res => res.json())\n    .then(data => context.setState({[state]: data}))\n    .catch(err => console.log(err))\n};\n","import React, { Component, Fragment } from 'react';\nimport { Link } from 'react-router-dom';\n\n/* ------------------------------------------------------------------- */\n/*                              Styles\n/* ------------------------------------------------------------------- */\n\nimport './index.sass';\n\n/* ------------------------------------------------------------------- */\n/*                              Data\n/* ------------------------------------------------------------------- */\n\nimport promo from './promo.png';\n\n/* ------------------------------------------------------------------- */\n/*                              My Components\n/* ------------------------------------------------------------------- */\n\nimport Header from '../../components/Header';\nimport {monthToString, correctDay} from '../../components/FormatDate';\n\n/* ------------------------------------------------------------------- */\n/*                              Main component\n/* ------------------------------------------------------------------- */\n\n\nexport default class Main extends Component {\n  render() {\n    return (\n      <Fragment>\n        <Header />\n        <Promo />\n        <Calendar />\n      </Fragment>\n    )\n  };\n};\n\nclass Promo extends Component {\n  render() {\n    return (\n      <div className='Promo'>\n        <img src={promo} alt='promo' />\n        <h3>Для получения списка сериалов, пожалуйста, выберите необходимый месяц и день.</h3>\n      </div>\n    )\n  };\n};\n\nclass Calendar extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      date: new Date()\n    };\n\n    this.handleClick = this.handleClick.bind(this);\n  };\n\n  handleClick(e) {\n    if (e.target.closest('.Calendar-Btn_prev')) {\n\n      this.setState(state => ({\n        date: new Date(state.date.getFullYear(),state.date.getMonth() - 1)\n      }))\n    };\n\n    if (e.target.closest('.Calendar-Btn_next')) {\n\n      this.setState(state => ({\n        date: new Date(state.date.getFullYear(),state.date.getMonth() + 1)\n      }))\n    };\n  };\n\n  render() {\n    return (\n      <div className='Calendar' onClick={this.handleClick} >\n        <Months date={this.state.date}  />\n        <Month date={this.state.date} />\n      </div>\n    )\n  };\n};\n\nclass Months extends Component {\n  render() {\n    return (\n      <div className='Calendar-Months'>\n        <button className='Calendar-Btn Calendar-Btn_prev'></button>\n        <span>{monthToString(this.props.date)}</span>\n        <button className='Calendar-Btn Calendar-Btn_next'></button>\n      </div>\n    )\n  };\n};\n\nclass Month extends Component {\n  render() {\n    data.dayNumber = 1;\n    data.maxDays = 7;\n\n    // This month & year\n    const year = this.props.date.getFullYear();\n    const month = this.props.date.getMonth();\n\n    // First & last date of this month + first (correct) weekday number\n    const firstDay = correctDay(new Date(year, month));\n    // const firstDate = new Date(year, month).getDate();\n    const lastDate = new Date(year, month + 1, 0).getDate();\n\n    // Check how much rows do we need\n    const countRows = () => {\n      return (lastDate === 31 && firstDay > 5) ? 6 : (lastDate === 28 && firstDay === 1) ? 4 : 5\n    };\n\n    // Save max rows into variable\n    const maxRows = countRows();\n\n    // Rows array\n    const weeks = [];\n    for (let i = 1; i <= maxRows; i++) {\n      weeks.push(<Weeks key={i} last={lastDate} weekday={firstDay} year={year} month={month} />)\n    };\n\n    return (\n      <table className='Calendar-Month' cellSpacing='0'>\n        <tbody>\n          {weeks}\n        </tbody>\n      </table>\n    )\n  };\n};\n\n// Data for each month. It will be restored on btns next/prev click\nconst data = {\n  dayNumber: 1,\n  maxDays: 7\n};\n\nclass Weeks extends Component {\n  render() {\n    // New array for days. It will be restored for each row\n    let days = [];\n\n    // Variables for some days from previuos month & some days from the next\n    let prevDays = this.props.weekday - 2;\n    let futureDays = 1;\n\n    // Pushing days into array.\n    // Conditions: starting each row from dayNumber, ending on maxDays (which are multiple to 7)\n    for (let i = data.dayNumber; i <= data.maxDays; i++) {\n\n      // Check for the first weekday of the month. Before it - no value.\n      // Also add prevDays form previous month to fulfil first row\n      if (i < this.props.weekday && data.maxDays <= 7) {\n        days.push(\n        <Day\n          value={new Date(this.props.year, this.props.month, -prevDays--).getDate()}\n          key={i}\n        />)\n      }\n\n      // Starting to pass days on first weekday. Also add class and tabIndex\n      else if (data.dayNumber <= this.props.last) days.push(\n        <Day\n          value={data.dayNumber++}\n          key={i}\n          addClass='Calendar-Day_active'\n          year={this.props.year}\n          month={this.props.month}\n          link={true}\n        />)\n\n      // For days more than lastDay of the month - empty value\n      // Also add some days from next month to fulfil last row\n      else days.push(\n        <Day\n          value={new Date(this.props.year, this.props.month + 1, futureDays++).getDate()}\n          key={i}\n        />)\n    };\n\n    // Increment maxDays on Math.min of 7 or current dayNubmer\n    data.maxDays += Math.min(data.dayNumber - 1, 7);\n\n    return (\n      <tr className='Calendar-Row'>\n        {days}\n      </tr>\n    )\n  };\n};\n\nclass Day extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state ={\n      height: '',\n    };\n\n    this.handleResize = this.handleResize.bind(this);\n  };\n\n  handleResize(e) {\n    // Define height of each cell to make them square\n    const td = document.querySelector('.Calendar-Day');\n    const width = td.clientWidth;\n\n    // Update cell height state\n    this.setState({height: width});\n  };\n\n  componentDidMount() {\n\n    this.handleResize()\n\n    window.addEventListener('resize', this.handleResize())\n  };\n\n  componentWillUnmoutn() {\n    window.removeEventListener('resize', this.handleResize())\n  }\n\n  render() {\n    let link = `/${this.props.value}.${this.props.month + 1 < 10 ? `0${this.props.month + 1}` : this.props.month + 1}.${this.props.year}`;\n\n    if (!this.props.link) link = '/';\n\n    return (\n      <td\n        className={this.props.addClass ? `Calendar-Day Calendar-Day_active` : `Calendar-Day`}\n        style={{'height': this.state.height}}\n      >\n        <Link to={link}>\n          {this.props.value}\n        </Link>\n      </td>\n    )\n  };\n};\n\n//\n","import React, { Component } from 'react';\n\n/* ------------------------------------------------------------------- */\n/*                              Styles\n/* ------------------------------------------------------------------- */\n\nimport './index.sass';\n\n/* ------------------------------------------------------------------- */\n/*                              My Components\n/* ------------------------------------------------------------------- */\n\nimport Header from '../../components/Header';\nimport {monthToString, inclineMonth, inclineCount, fetchData} from '../../components/FormatDate';\n\n/* ------------------------------------------------------------------- */\n/*                              Schedule component\n/* ------------------------------------------------------------------- */\n\n// Global object for date properties\nconst date = {\n\n};\n\nexport default class Schedule extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      data: '',\n      prev: '',\n      date: window.location.pathname.replace(/\\//, '').split('.'),\n    }\n  };\n\n  componentDidMount() {\n    // Split into variables day, month, year. Assign as property of global date object\n    date.day = this.state.date[0] >= 10 ? this.state.date[0] :  `0${this.state.date[0]}`;\n    date.month = this.state.date[1];\n    date.year = this.state.date[2];\n\n    // Find out data for previous day. Assign as property of global date object\n    date.prevDay = date.day <= 1 ?\n      new Date(date.year, +date.month - 1, 0).getDate() :\n      +date.day - 1 >= 10 ?\n      +date.day - 1 :\n      `0${+date.day - 1}`;\n\n    date.prevMonth = +date.prevDay < +date.day ?\n      date.month :\n      +date.month - 1 >= 10 ?\n      +date.month - 1 :\n      `0${+date.month - 1}`;\n    if (date.prevMonth === '00') date.prevMonth = 12;\n\n    date.prevYear = +date.month === 1 && +date.day === 1 ? +date.year - 1 : +date.year;\n\n    console.log(date.prevYear, date.prevMonth, date.prevDay);\n\n    // Fetch data for current & previous days\n    fetchData(\n      `http://api.tvmaze.com/schedule?country=US&date=${date.year}-${date.month}-${date.day}`,\n      'data',\n      this\n    );\n    fetchData(\n      `http://api.tvmaze.com/schedule?country=US&date=${date.prevYear}-${date.prevMonth}-${date.prevDay}`,\n      'prev',\n      this\n    );\n  };\n\n  render() {\n    // Use functions to convert month into word and incline it\n    let month;\n    let prevMonth;\n\n    if (date.year && date.month) {\n      month = inclineMonth(monthToString(new Date(date.year, +date.month - 1)).toLowerCase());\n      prevMonth = inclineMonth(monthToString(new Date(date.prevYear, +date.prevMonth - 1)).toLowerCase());\n    };\n\n    return (\n      <div className='Schedule'>\n        <Header link='/' />\n        <Day\n          date={`${date.day} ${month} ${date.year}`}\n          data={this.state.data}\n        />\n        <Day\n          date={`${date.prevDay} ${prevMonth} ${date.prevYear}`}\n          data={this.state.prev}\n        />\n      </div>\n    )\n  };\n};\n\nclass Day extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      items: [],\n      max: this.props.data.length,\n      count: 3,\n    };\n\n    this.handleClick = this.handleClick.bind(this);\n    this.renderItems = this.renderItems.bind(this);\n  };\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.data !== this.props.data) this.renderItems()\n  };\n\n  renderItems() {\n    const items = [];\n    if (this.props.data.length) {\n      this.props.data.forEach((item, i) => {\n        if (i > this.state.count - 1) return\n\n        items.push(\n          <Item\n            img={item.show.image ? item.show.image.medium : ''}\n            title={item.name ? item.name : ''}\n            year={item.airdate ? item.airdate.split('-')[0] : ''}\n            season={item.season ? item.season : ''}\n            episode={item.number ? item.number : ''}\n            key={i}\n          />\n        )\n      })\n    };\n\n    this.setState({\n      items: items,\n    })\n  };\n\n  handleClick(e) {\n    this.setState({count: this.props.data.length}, () => this.renderItems());\n  };\n\n  render() {\n    const sorry = (\n      <div className='Schedule-Sorry'>\n        Sorry, no data yet\n      </div>\n    );\n\n    return (\n      <div className='Schedule-Day'>\n        <div className='Schedule-Date'>\n          {this.props.date}\n        </div>\n\n        {this.state.items.length ? this.state.items : sorry}\n\n        <Btn\n          value={`Еще ${inclineCount(this.props.data.length - this.state.count, 'сериал')}`}\n          hide={this.props.data.length <= this.state.count ? true : false}\n          onClick={this.handleClick}\n        />\n      </div>\n    )\n  };\n};\n\nclass Item extends Component {\n  render() {\n    return (\n      <div className='Schedule-Item'>\n        <img src={this.props.img} alt={this.props.title} />\n\n        <div>\n          <div>\n            <h4>{this.props.title}</h4>\n            <span>{this.props.year}</span>\n          </div>\n\n          <table>\n            <tbody>\n              <tr>\n                <td>Сезон: {this.props.season}</td>\n                <td>Эпизод: {this.props.episode}</td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n      </div>\n    )\n  };\n};\n\nclass Btn extends Component {\n  render() {\n    return (\n      <button\n        className={this.props.hide ? `Schedule-Btn Schedule-Btn_hidden` : `Schedule-Btn`}\n        onClick={this.props.onClick}\n      >\n        {this.props.value}\n        <span tabIndex='-1'></span>\n      </button>\n    )\n  };\n};\n\n\n\n\n\n\n\n\n//\n","import React, {Fragment} from 'react';\nimport ReactDOM from 'react-dom';\nimport { Route, BrowserRouter as Router } from 'react-router-dom';\n\nimport * as serviceWorker from './serviceWorker';\nimport './index.sass';\n\n/* ------------------------------------------------------------------- */\n/*                              Import My Components\n/* ------------------------------------------------------------------- */\n\nimport Main from './containers/Main';\nimport Schedule from './containers/Schedule';\n\n/* ------------------------------------------------------------------- */\n/*                              ReactDOM.render\n/* ------------------------------------------------------------------- */\n\nconst App = (\n  <Router>\n    <Fragment>\n      <Route path='/' exact component={Main} />\n      <Route path='/:date' component={Schedule} />\n    </Fragment>\n  </Router>\n)\n\nReactDOM.render(\n  App,\n  document.getElementById('root')\n);\n\n/* ------------------------------------------------------------------- */\n/*                              Service workers\n/* ------------------------------------------------------------------- */\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}